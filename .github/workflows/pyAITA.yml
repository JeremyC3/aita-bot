name: AITA-Python
# Tentatively disabled, will manually update database for now.
on:
  # schedule:
  #   # currently scheduled to run every day @ 8 AM PST
  #   - cron: "0 17 * * *"
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    outputs:
      title: ${{ steps.AITA.outputs.title }}
      body: ${{ steps.AITA.outputs.body }}
      url: ${{ steps.AITA.outputs.url }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          pip install praw
          pip install uuid
      - name: Run Python script
        id: AITA
        run: |
          import praw
          import uuid
          import os
          def set_multiline_output(name, value):
              with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
                  delimiter = uuid.uuid1()
                  print(f'{name}<<{delimiter}', file=fh)
                  print(value, file=fh)
                  print(delimiter, file=fh)
          reddit = praw.Reddit(
              client_id="${{ secrets.UID }}",
              client_secret="${{ secrets.SECRET }}",
              user_agent="<AITABOT>:<1.0>:<1.0> (by /u/fytche)",
          )
          for submission in reddit.subreddit("AITAFiltered").search("aita", limit=1, time_filter = "day"):
              print(submission.title)
              set_multiline_output("title", submission.title)
              set_multiline_output("body", reddit.submission(submission.crosspost_parent.split('_')[1]).selftext)
              set_multiline_output("url", "https://www.reddit.com" + submission.url)
        shell: python
  post:
    needs:
      - build
    name: post
    runs-on: ubuntu-latest
    steps:
      - name: post to Discord
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          nodetail: true
          title: ${{ needs.build.outputs.title}}
          description: ${{ needs.build.outputs.body}}
          url: ${{ needs.build.outputs.url}}
          username: AITA-Bot
          avatar_url: ${{ vars.BOT_IMAGE }}
